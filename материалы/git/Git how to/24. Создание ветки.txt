Цели

    Научиться создавать локальную ветку в репозитории

Пора сделать наш hello world более выразительным. Так как это может занять некоторое время, лучше переместить эти изменения в отдельную ветку, чтобы изолировать их от изменений в ветке master.
01
Создайте ветку

Давайте назовем нашу новую ветку «style».
Выполните:

git checkout -b style
git status

Примечание: git checkout -b <имяветки> является шорткатом для git branch <имяветки> за которым идет git checkout <имяветки>.

Обратите внимание, что команда git status сообщает о том, что вы находитесь в ветке «style».
02
Добавьте файл стилей style.css
Выполните:

touch lib/style.css

Файл: lib/style.css

h1 {
  color: red;
}

Выполните:

git add lib/style.css
git commit -m "Added css stylesheet"

03
Измените основную страницу

Обновите файл hello.html, чтобы использовать стили style.css.
Файл: lib/hello.html

<!-- Author: Alexander Shvets (alex@githowto.com) -->
<html>
  <head>
    <link type="text/css" rel="stylesheet" media="all" href="style.css" />
  </head>
  <body>
    <h1>Hello, World!</h1>
  </body>
</html>

Выполните:

git add lib/hello.html
git commit -m "Hello uses style.css"

04
Измените index.html

Обновите файл index.html, чтобы он тоже использовал style.css
Файл: index.html

<html>
  <head>
    <link type="text/css" rel="stylesheet" media="all" href="lib/style.css" />
  </head>
  <body>
    <iframe src="lib/hello.html" width="200" height="200" />
  </body>
</html>

Выполните:

git add index.html
git commit -m "Updated index.html"

05
Далее

Теперь у нас есть новая ветка под названием style с 3 новыми коммитами. Далее мы узнаем, как осуществлять навигацию и переключаться между ветками.